name: üõ∏ WebView2 Build (Release + Debug)

on:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: Enable Debug shell (tmate)
        default: false

jobs:
  webview2:
    name: WebView2-${{ matrix.config }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]

    steps:
      - name: üì• Checkout (HTTPS + submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üîÅ Force submodules to HTTPS
        shell: bash
        run: |
          if [ -f .gitmodules ]; then
            git config -f .gitmodules --get-regexp '^submodule\..*\.url$' | while read -r key url; do
              if [[ "$url" =~ ^git@github\.com: ]]; then
                https_url="https://github.com/${url#git@github.com:}"
                git config -f .gitmodules "$key" "$https_url"
              fi
            done
            git submodule sync --recursive
            git submodule update --init --recursive
          fi

      - name: üëΩ Setup Saucer (WebView2 ${{ matrix.config }})
        uses: ./.github/actions/setup
        with:
          backend: WebView2
          platform: Windows
          build-type: ${{ matrix.config }}
          install: true
          xcode-version: ""
          cmake-args: -Dsaucer_tests=OFF -Dsaucer_examples=ON

      # üîß Actually build (setup only preps env; this compiles)
      - name: üõ†Ô∏è Configure (CMake)
        run: >
          cmake -S . -B build -A x64
          -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          -Dsaucer_tests=OFF
          -Dsaucer_examples=ON
          -Dsaucer_backend=WebView2

      - name: üöÄ Build (CMake)
        run: cmake --build build --config ${{ matrix.config }} --parallel

      # Diagnostics so we can see where outputs landed
      - name: üìÇ List likely outputs (exe/dll/pdb) ‚Äî ${{ matrix.config }}
        shell: pwsh
        run: |
          Write-Host "Workspace: $PWD"
          Get-ChildItem -Recurse -File -Include *.exe,*.dll,*.pdb -ErrorAction SilentlyContinue |
            Select-Object FullName, Length | Format-Table -AutoSize

      # Stage everything to a known folder and ensure WebView2Loader.dll is present if available
      - name: üß≥ Stage WebView2 outputs ‚Äî ${{ matrix.config }}
        shell: pwsh
        run: |
          $cfg = "${{ matrix.config }}"
          $out = "out\WebView2\$cfg"
          New-Item -ItemType Directory -Force -Path $out | Out-Null

          $patterns = @(
            ".\artifact\**\*.*",                   # if your setup action used this
            ".\build\**\$cfg\**\*.exe",
            ".\build\**\$cfg\**\*.dll",
            ".\**\x64\$cfg\*.exe",
            ".\**\x64\$cfg\*.dll",
            ".\**\bin\$cfg\*.exe",
            ".\**\bin\$cfg\*.dll",
            ".\**\*.pdb"
          )

          $copied = 0
          foreach ($p in $patterns) {
            Get-ChildItem -Recurse -File -Path $p -ErrorAction SilentlyContinue | ForEach-Object {
              Copy-Item $_.FullName $out -Force
              $copied++
            }
          }

          if (-not (Test-Path (Join-Path $out "WebView2Loader.dll"))) {
            $loader = Get-ChildItem -Recurse -File -Filter WebView2Loader.dll -ErrorAction SilentlyContinue |
              Where-Object { $_.FullName -match 'Microsoft\.Web\.WebView2' -and $_.FullName -match 'runtimes\\win-x64\\native\\WebView2Loader\.dll$' } |
              Select-Object -First 1
            if ($loader) { Copy-Item $loader.FullName $out -Force; $copied++ }
          }

          if ($copied -eq 0) {
            Write-Error "No build outputs found to stage for $cfg. Check the listing step above for actual paths."
          } else {
            Write-Host "Staged $copied files to $out"
            Get-ChildItem $out | Format-Table -AutoSize
          }

      - name: üì¶ Upload staged artifacts ‚Äî ${{ matrix.config }}
        uses: actions/upload-artifact@v4
        with:
          name: WebView2-${{ matrix.config }}
          path: out/WebView2/${{ matrix.config }}/**
          if-no-files-found: error
          retention-days: 14

      - name: üêõ Debug shell
        if: ${{ inputs.debug == true }}
        uses: mxschmitt/action-tmate@v3
        with:
          install-dependencies: false
          limit-access-to-actor: true
