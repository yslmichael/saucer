name: üõ∏ WebView2 ‚Äî Release & Debug

on:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: Enable Debug shell (tmate)
        default: false

jobs:
  webview2:
    name: WebView2-${{ matrix.config }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]

    steps:
      - name: üì• Checkout (HTTPS + submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üîÅ Force submodules to HTTPS
        shell: bash
        run: |
          if [ -f .gitmodules ]; then
            git config -f .gitmodules --get-regexp '^submodule\..*\.url$' | while read -r key url; do
              if [[ "$url" =~ ^git@github\.com: ]]; then
                https_url="https://github.com/${url#git@github.com:}"
                git config -f .gitmodules "$key" "$https_url"
              fi
            done
            git submodule sync --recursive
            git submodule update --init --recursive
          fi

      - name: üëΩ Setup Saucer (WebView2 ${{ matrix.config }})
        uses: ./.github/actions/setup
        with:
          backend: WebView2
          platform: Windows
          build-type: ${{ matrix.config }}
          install: true
          xcode-version: ""
          cmake-args: -Dsaucer_tests=OFF -Dsaucer_examples=ON

      # Fresh build dir per config; request x64 VS 2022 generator
      - name: üõ†Ô∏è Configure (CMake) ‚Äî ${{ matrix.config }}
        run: >
          cmake -S . -B build-wv2-${{ matrix.config }}
          -G "Visual Studio 17 2022" -A x64
          -DCMAKE_BUILD_TYPE=${{ matrix.config }}
          -Dsaucer_backend=WebView2
          -Dsaucer_tests=OFF
          -Dsaucer_examples=ON
          -DBUILD_SHARED_LIBS=ON
          -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install-wv2-${{ matrix.config }}"

      - name: üöÄ Build (CMake) ‚Äî ${{ matrix.config }}
        run: cmake --build build-wv2-${{ matrix.config }} --config ${{ matrix.config }} --parallel

      # Try a proper 'install' first (if the project defines install() rules)
      - name: üì¶ Install (CMake) ‚Äî ${{ matrix.config }}
        run: cmake --install build-wv2-${{ matrix.config }} --config ${{ matrix.config }}

      # Show what we have under the install prefix
      - name: üìÇ List installed files ‚Äî ${{ matrix.config }}
        shell: pwsh
        run: |
          $inst = "install-wv2-${{ matrix.config }}"
          if (Test-Path $inst) {
            Write-Host "Installed tree:"
            Get-ChildItem -Recurse -File $inst | Select-Object FullName, Length | Format-Table -AutoSize
          } else {
            Write-Host "No install tree found."
          }

      # Fallback: if install dir is empty or not present, stage from build tree
      - name: üß≥ Stage outputs ‚Äî ${{ matrix.config }}
        shell: pwsh
        run: |
          $cfg = "${{ matrix.config }}"
          $inst = "install-wv2-$cfg"
          $out  = "out\WebView2\$cfg"
          New-Item -ItemType Directory -Force -Path $out | Out-Null

          $staged = 0
          if (Test-Path $inst) {
            $files = Get-ChildItem -Recurse -File $inst -ErrorAction SilentlyContinue
            foreach ($f in $files) { Copy-Item $f.FullName $out -Force; $staged++ }
          }

          if ($staged -eq 0) {
            $build = "build-wv2-$cfg"
            $patterns = @(
              "$build\**\$cfg\**\*.exe",
              "$build\**\$cfg\**\*.dll",
              "$build\**\$cfg\**\*.lib",
              "$build\**\$cfg\**\*.exp",
              "$build\**\*.pdb",
              ".\artifact\**\*.*"   # in case the setup action wrote here
            )
            foreach ($p in $patterns) {
              Get-ChildItem -Recurse -File -Path $p -ErrorAction SilentlyContinue | ForEach-Object {
                Copy-Item $_.FullName $out -Force
                $staged++
              }
            }
          }

          # Add WebView2Loader.dll if the project didn't copy it already
          if (-not (Test-Path (Join-Path $out "WebView2Loader.dll"))) {
            $loader = Get-ChildItem -Recurse -File -Filter WebView2Loader.dll -ErrorAction SilentlyContinue |
              Where-Object { $_.FullName -match 'Microsoft\.Web\.WebView2' -and $_.FullName -match 'runtimes\\win-x64\\native\\WebView2Loader\.dll$' } |
              Select-Object -First 1
            if ($loader) { Copy-Item $loader.FullName $out -Force; $staged++ }
          }

          if ($staged -eq 0) { Write-Error "Nothing to package for $cfg. Check previous steps for where files landed." }
          else {
            Write-Host "Staged $staged files to $out"
            Get-ChildItem $out | Format-Table -AutoSize
          }

      - name: ‚¨ÜÔ∏è Upload artifacts ‚Äî ${{ matrix.config }}
        uses: actions/upload-artifact@v4
        with:
          name: WebView2-${{ matrix.config }}
          path: out/WebView2/${{ matrix.config }}/**
          if-no-files-found: error
          retention-days: 14

      - name: üêõ Debug shell
        if: ${{ inputs.debug == true }}
        uses: mxschmitt/action-tmate@v3
        with:
          install-dependencies: false
          limit-access-to-actor: true
